# This workflow will do a clean installation of node dependencies, cache/restore them, and run hardhat dodoc on Arrow contracts

name: Generate docs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        uses: ./.github/actions/install
        with:
          node-version: 16.x
      - name: Run hardhat dodoc
        run: npm run dodoc
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.AWS_ROLE_ARN }}"
          role-session-name: arrow-contracts-generate-docs
          aws-region: "us-east-2"
      - name: Sync files to S3 for processing
        id: sync_s3
        run: |
          FILES_CHANGED=$(aws s3 sync ./docs/ "s3://${{ secrets.AWS_S3_BUCKET }}${{ secrets.AWS_S3_DOCS_DEST_PATH }}" --delete --size-only | wc -l)
          echo "::set-output name=files_changed::$FILES_CHANGED"
    outputs:
      files_changed: "${{ steps.sync_s3.outputs.files_changed }}"

  publish-docs:
    runs-on: ubuntu-latest
    needs: [generate-docs]
    if: needs.generate-docs.outputs.files_changed > 0
    steps:
      - name: Debug
        run: |
          echo '::echo::on'
          echo "Running action since files_changed is set to: ${{ needs.generate-docs.outputs.files_changed }}"
      - name: Dispatch website deploy docs action
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: Arrow-Air/website
          event-type: deploy-docs
          token: "${{ secrets.REPO_ACCESS_TOKEN }}"
          client-payload: '{"docs_path": "${{ secrets.AWS_S3_DOCS_DEST_PATH }}", "aws_s3_source_bucket": "${{ secrets.AWS_S3_BUCKET }}"}'
